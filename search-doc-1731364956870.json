[{"title":"Badge","type":0,"sectionRef":"#","url":"/OnyxUI/api/Badge","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Badge","url":"/OnyxUI/api/Badge#types","content":" "},{"title":"BadgeProps​","type":1,"pageTitle":"Badge","url":"/OnyxUI/api/Badge#BadgeProps","content":"&lt;/&gt; interface BadgeProps { ...: FrameProps Content: Fusion.UsedAs&lt;{string}&gt;? ContentWrapped: Fusion.UsedAs&lt;boolean&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? ContentColor: Fusion.UsedAs&lt;Color3 &gt;? ContentSize: Fusion.UsedAs&lt;number&gt;? ContentWrapped: Fusion.UsedAs&lt;number&gt;? }  "},{"title":"AutoScaleFrame","type":0,"sectionRef":"#","url":"/OnyxUI/api/AutoScaleFrame","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"AutoScaleFrame","url":"/OnyxUI/api/AutoScaleFrame#types","content":" "},{"title":"AutoScaleFrameProps​","type":1,"pageTitle":"AutoScaleFrame","url":"/OnyxUI/api/AutoScaleFrame#AutoScaleFrameProps","content":"&lt;/&gt; interface AutoScaleFrameProps { ...: BaseProps BaseResolution: Fusion.UsedAs&lt;Vector2 &gt;? MinScale: Fusion.UsedAs&lt;number&gt;? MaxScale: Fusion.UsedAs&lt;number&gt;? ScaleMultiplier: Fusion.UsedAs&lt;number&gt;? }  "},{"title":"Avatar","type":0,"sectionRef":"#","url":"/OnyxUI/api/Avatar","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Avatar","url":"/OnyxUI/api/Avatar#types","content":" "},{"title":"AvatarProps​","type":1,"pageTitle":"Avatar","url":"/OnyxUI/api/Avatar#AvatarProps","content":"&lt;/&gt; interface AvatarProps { ...: ImageProps Image: Fusion.UsedAs&lt;string&gt;? RingEnabled: Fusion.UsedAs&lt;boolean&gt;? RingColor: Fusion.UsedAs&lt;Color3 &gt;? RingThickness: Fusion.UsedAs&lt;number&gt;? IndicatorEnabled: Fusion.UsedAs&lt;boolean&gt;? IndicatorColor: Fusion.UsedAs&lt;Color3 &gt;? IndicatorIcon: Fusion.UsedAs&lt;string&gt;? IndicatorIconColor: Fusion.UsedAs&lt;Color3 &gt;? IndicatorCornerRadius: Fusion.UsedAs&lt;UDim &gt;? }  "},{"title":"BaseButton","type":0,"sectionRef":"#","url":"/OnyxUI/api/BaseButton","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"BaseButton","url":"/OnyxUI/api/BaseButton#types","content":" "},{"title":"BaseButtonProps​","type":1,"pageTitle":"BaseButton","url":"/OnyxUI/api/BaseButton#BaseButtonProps","content":"&lt;/&gt; interface BaseButtonProps { ...: BaseProps Disabled: Fusion.UsedAs&lt;boolean&gt;? OnActivated: Fusion.UsedAs&lt;() → ()&gt;? OnMouseEnter: Fusion.UsedAs&lt;() → ()&gt;? OnMouseLeave: Fusion.UsedAs&lt;() → ()&gt;? OnMouseButton1Down: Fusion.UsedAs&lt;() → ()&gt;? OnMouseButton1Up: Fusion.UsedAs&lt;() → ()&gt;? IsHovering: Fusion.UsedAs&lt;boolean&gt;? IsHolding: Fusion.UsedAs&lt;boolean&gt;? HoverSound: Fusion.UsedAs&lt;Sound &gt;? ClickSound: Fusion.UsedAs&lt;Sound &gt;? }  "},{"title":"Card","type":0,"sectionRef":"#","url":"/OnyxUI/api/Card","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Card","url":"/OnyxUI/api/Card#types","content":" "},{"title":"CardProps​","type":1,"pageTitle":"Card","url":"/OnyxUI/api/Card#CardProps","content":"&lt;/&gt; interface CardProps { ...: FrameProps }  "},{"title":"Button","type":0,"sectionRef":"#","url":"/OnyxUI/api/Button","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Button","url":"/OnyxUI/api/Button#types","content":" "},{"title":"ButtonProps​","type":1,"pageTitle":"Button","url":"/OnyxUI/api/Button#ButtonProps","content":"&lt;/&gt; interface ButtonProps { ...: BaseProps Disabled: Fusion.UsedAs&lt;boolean&gt;? Content: Fusion.UsedAs&lt;{string}&gt;? Style: Fusion.UsedAs&lt;string&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? ContentColor: Fusion.UsedAs&lt;Color3 &gt;? ContentSize: Fusion.UsedAs&lt;number&gt;? ContentWrapped: Fusion.UsedAs&lt;boolean&gt;? SizeVariant: Fusion.UsedAs&lt;&quot;ExtraSmall&quot; | &quot;Small&quot; | &quot;Medium&quot; | &quot;Large&quot; | &quot;ExtraLarge&quot;&gt;? IsHolding: Fusion.UsedAs&lt;boolean&gt;? }  "},{"title":"Divider","type":0,"sectionRef":"#","url":"/OnyxUI/api/Divider","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Divider","url":"/OnyxUI/api/Divider#types","content":" "},{"title":"DividerProps​","type":1,"pageTitle":"Divider","url":"/OnyxUI/api/Divider#DividerProps","content":"&lt;/&gt; interface DividerProps { ...: FrameProps Length: Fusion.UsedAs&lt;UDim &gt;? FillDirection: Fusion.UsedAs&lt;Enum.FillDirection&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? Transparency: Fusion.UsedAs&lt;number&gt;? Spacing: Fusion.UsedAs&lt;UDim &gt;? }  "},{"title":"Frame","type":0,"sectionRef":"#","url":"/OnyxUI/api/Frame","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Frame","url":"/OnyxUI/api/Frame#types","content":" "},{"title":"FrameProps​","type":1,"pageTitle":"Frame","url":"/OnyxUI/api/Frame#FrameProps","content":"&lt;/&gt; interface FrameProps { ...: BaseProps }  "},{"title":"Checkbox","type":0,"sectionRef":"#","url":"/OnyxUI/api/Checkbox","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Checkbox","url":"/OnyxUI/api/Checkbox#types","content":" "},{"title":"CheckboxProps​","type":1,"pageTitle":"Checkbox","url":"/OnyxUI/api/Checkbox#CheckboxProps","content":"&lt;/&gt; interface CheckboxProps { ...: BaseButtonProps Checked: Fusion.UsedAs&lt;boolean&gt;? Icon: Fusion.UsedAs&lt;string&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? }  "},{"title":"Group","type":0,"sectionRef":"#","url":"/OnyxUI/api/Group","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Group","url":"/OnyxUI/api/Group#types","content":" "},{"title":"GroupProps​","type":1,"pageTitle":"Group","url":"/OnyxUI/api/Group#GroupProps","content":"&lt;/&gt; interface GroupProps { ...: BaseProps GroupTransparency: Fusion.UsedAs&lt;number&gt;? GroupColor3: Fusion.UsedAs&lt;Color3 &gt;? }  "},{"title":"Heading","type":0,"sectionRef":"#","url":"/OnyxUI/api/Heading","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Heading","url":"/OnyxUI/api/Heading#types","content":" "},{"title":"HeadingProps​","type":1,"pageTitle":"Heading","url":"/OnyxUI/api/Heading#HeadingProps","content":"&lt;/&gt; interface HeadingProps { ...: TextProps HeadingSize: Fusion.UsedAs&lt;number&gt;? TextSize: Fusion.UsedAs&lt;number&gt;? }  "},{"title":"Icon","type":0,"sectionRef":"#","url":"/OnyxUI/api/Icon","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Icon","url":"/OnyxUI/api/Icon#types","content":" "},{"title":"IconProps​","type":1,"pageTitle":"Icon","url":"/OnyxUI/api/Icon#IconProps","content":"&lt;/&gt; interface IconProps { ...: ImageProps }  "},{"title":"Base","type":0,"sectionRef":"#","url":"/OnyxUI/api/Base","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Base","url":"/OnyxUI/api/Base#types","content":" "},{"title":"BaseProps​","type":1,"pageTitle":"Base","url":"/OnyxUI/api/Base#BaseProps","content":"&lt;/&gt; interface BaseProps { ...: BaseProps ClassName: string? Name: Fusion.UsedAs&lt;string&gt;? Parent: Fusion.UsedAs&lt;Instance &gt;? Position: Fusion.UsedAs&lt;UDim2 &gt;? Rotation: Fusion.UsedAs&lt;number&gt;? AnchorPoint: Fusion.UsedAs&lt;Vector2 &gt;? Size: Fusion.UsedAs&lt;UDim2 &gt;? AutomaticSize: Fusion.UsedAs&lt;Enum.AutomaticSize&gt;? Visible: Fusion.UsedAs&lt;boolean&gt;? ZIndex: Fusion.UsedAs&lt;number&gt;? LayoutOrder: Fusion.UsedAs&lt;number&gt;? ClipsDescendants: Fusion.UsedAs&lt;boolean&gt;? Active: Fusion.UsedAs&lt;boolean&gt;? Selectable: Fusion.UsedAs&lt;boolean&gt;? Interactable: Fusion.UsedAs&lt;boolean&gt;? BackgroundColor3: Fusion.UsedAs&lt;Color3 &gt;? BackgroundTransparency: Fusion.UsedAs&lt;number&gt;? NextSelectionDown: Fusion.UsedAs&lt;GuiObject &gt;? NextSelectionUp: Fusion.UsedAs&lt;GuiObject &gt;? NextSelectionRight: Fusion.UsedAs&lt;GuiObject &gt;? NextSelectionLeft: Fusion.UsedAs&lt;GuiObject &gt;? SelectionImageObject: Fusion.UsedAs&lt;GuiObject &gt;? SelectionOrder: Fusion.UsedAs&lt;number&gt;? SizeConstraint: Fusion.UsedAs&lt;Enum.SizeConstraint&gt;? AutoLocalize: Fusion.UsedAs&lt;boolean&gt;? RootLocalizationTable: Fusion.UsedAs&lt;LocalizationTable &gt;? SelectionBehaviorDown: Fusion.UsedAs&lt;Enum.SelectionBehavior&gt;? SelectionBehaviorUp: Fusion.UsedAs&lt;Enum.SelectionBehavior&gt;? SelectionBehaviorRight: Fusion.UsedAs&lt;Enum.SelectionBehavior&gt;? SelectionBehaviorLeft: Fusion.UsedAs&lt;Enum.SelectionBehavior&gt;? SelectionGroup: Fusion.UsedAs&lt;boolean&gt;? CornerRadius: Fusion.UsedAs&lt;UDim &gt;? Padding: Fusion.UsedAs&lt;UDim &gt;? PaddingTop: Fusion.UsedAs&lt;UDim &gt;? PaddingLeft: Fusion.UsedAs&lt;UDim &gt;? PaddingRight: Fusion.UsedAs&lt;UDim &gt;? PaddingBottom: Fusion.UsedAs&lt;UDim &gt;? Scale: Fusion.UsedAs&lt;number&gt;? StrokeEnabled: Fusion.UsedAs&lt;boolean&gt;? StrokeThickness: Fusion.UsedAs&lt;number&gt;? StrokeColor: Fusion.UsedAs&lt;Color3 &gt;? StrokeTransparency: Fusion.UsedAs&lt;number&gt;? StrokeLineJoinMode: Fusion.UsedAs&lt;Enum.LineJoinMode&gt;? StrokeApplyStrokeMode: Fusion.UsedAs&lt;Enum.ApplyStrokeMode&gt;? GradientEnabled: Fusion.UsedAs&lt;boolean&gt;? GradientColor: Fusion.UsedAs&lt;ColorSequence &gt;? GradientOffset: Fusion.UsedAs&lt;UDim &gt;? GradientRotation: Fusion.UsedAs&lt;number&gt;? GradientTransparency: Fusion.UsedAs&lt;number&gt;? AspectRatio: Fusion.UsedAs&lt;number&gt;? AspectType: Fusion.UsedAs&lt;Enum.AspectType&gt;? DominantAxis: Fusion.UsedAs&lt;Enum.DominantAxis&gt;? ListEnabled: Fusion.UsedAs&lt;boolean&gt;? ListPadding: Fusion.UsedAs&lt;UDim &gt;? ListFillDirection: Fusion.UsedAs&lt;Enum.FillDirection&gt;? ListSortOrder: Fusion.UsedAs&lt;Enum.SortOrder&gt;? ListWraps: Fusion.UsedAs&lt;boolean&gt;? ListHorizontalAlignment: Fusion.UsedAs&lt;Enum.HorizontalAlignment&gt;? ListHorizontalFlex: Fusion.UsedAs&lt;boolean&gt;? ListVerticalAlignment: Fusion.UsedAs&lt;Enum.VerticalAlignment&gt;? ListVerticalFlex: Fusion.UsedAs&lt;boolean&gt;? ListItemLineAlignment: Fusion.UsedAs&lt;Enum.ItemLineAlignment&gt;? GridEnabled: Fusion.UsedAs&lt;boolean&gt;? GridCellPadding: Fusion.UsedAs&lt;UDim &gt;? GridCellSize: Fusion.UsedAs&lt;UDim2 &gt;? GridFillDirection: Fusion.UsedAs&lt;Enum.FillDirection&gt;? GridFillDirectionMaxCells: Fusion.UsedAs&lt;number&gt;? GridSortOrder: Fusion.UsedAs&lt;Enum.SortOrder&gt;? GridStartCorner: Fusion.UsedAs&lt;Enum.StartCorner&gt;? GridHorizontalAlignment: Fusion.UsedAs&lt;Enum.HorizontalAlignment&gt;? GridVerticalAlignment: Fusion.UsedAs&lt;Enum.VerticalAlignment&gt;? TableEnabled: Fusion.UsedAs&lt;boolean&gt;? TablePadding: Fusion.UsedAs&lt;UDim &gt;? TableFillEmptySpaceColumns: Fusion.UsedAs&lt;boolean&gt;? TableFillEmptySpaceRows: Fusion.UsedAs&lt;boolean&gt;? TableFillDirection: Fusion.UsedAs&lt;Enum.FillDirection&gt;? TableSortOrder: Fusion.UsedAs&lt;Enum.SortOrder&gt;? TableMajorAxis: Fusion.UsedAs&lt;Enum.TableMajorAxis&gt;? TableHorizontalAlignment: Fusion.UsedAs&lt;Enum.HorizontalAlignment&gt;? TableVerticalAlignment: Fusion.UsedAs&lt;Enum.VerticalAlignment&gt;? PageEnabled: Fusion.UsedAs&lt;boolean&gt;? PageAnimated: Fusion.UsedAs&lt;boolean&gt;? PageCircular: Fusion.UsedAs&lt;boolean&gt;? PageEasingDirection: Fusion.UsedAs&lt;Enum.EasingDirection&gt;? PageEasingStyle: Fusion.UsedAs&lt;Enum.EasingStyle&gt;? PagePadding: Fusion.UsedAs&lt;UDim &gt;? PageTweenTime: Fusion.UsedAs&lt;number&gt;? PageFillDirection: Fusion.UsedAs&lt;Enum.FillDirection&gt;? PageSortOrder: Fusion.UsedAs&lt;Enum.SortOrder&gt;? PageHorizontalAlignment: Fusion.UsedAs&lt;Enum.HorizontalAlignment&gt;? PageVerticalAlignment: Fusion.UsedAs&lt;Enum.VerticalAlignment&gt;? PageGamepadInputEnabled: Fusion.UsedAs&lt;boolean&gt;? PageScrollWheelInputEnabled: Fusion.UsedAs&lt;boolean&gt;? PageTouchInputEnabled: Fusion.UsedAs&lt;boolean&gt;? FlexMode: Fusion.UsedAs&lt;Enum.UIFlexMode&gt;? FlexItemLineAlignment: Fusion.UsedAs&lt;Enum.ItemLineAlignment&gt;? FlexGrowRatio: Fusion.UsedAs&lt;number&gt;? FlexShrinkRatio: Fusion.UsedAs&lt;number&gt;? MaxSize: Fusion.UsedAs&lt;Vector2 &gt;? MinSize: Fusion.UsedAs&lt;Vector2 &gt;? MaxTextSize: Fusion.UsedAs&lt;number&gt;? MinTextSize: Fusion.UsedAs&lt;number&gt;? }  "},{"title":"IconText","type":0,"sectionRef":"#","url":"/OnyxUI/api/IconText","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"IconText","url":"/OnyxUI/api/IconText#types","content":" "},{"title":"IconTextProps​","type":1,"pageTitle":"IconText","url":"/OnyxUI/api/IconText#IconTextProps","content":"&lt;/&gt; interface IconTextProps { ...: FrameProps Content: Fusion.UsedAs&lt;{string}&gt;? ContentColor: Fusion.UsedAs&lt;Color3 &gt;? ContentSize: Fusion.UsedAs&lt;number&gt;? ContentTransparency: Fusion.UsedAs&lt;number&gt;? ContentWrapped: Fusion.UsedAs&lt;boolean&gt;? ContentRichText: Fusion.UsedAs&lt;boolean&gt;? ContentFontFace: Fusion.UsedAs&lt;Font &gt;? }  "},{"title":"IconButton","type":0,"sectionRef":"#","url":"/OnyxUI/api/IconButton","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"IconButton","url":"/OnyxUI/api/IconButton#types","content":" "},{"title":"IconButtonProps​","type":1,"pageTitle":"IconButton","url":"/OnyxUI/api/IconButton#IconButtonProps","content":"&lt;/&gt; interface IconButtonProps { ...: ButtonProps Image: Fusion.UsedAs&lt;string&gt;? }  "},{"title":"Image","type":0,"sectionRef":"#","url":"/OnyxUI/api/Image","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Image","url":"/OnyxUI/api/Image#types","content":" "},{"title":"ImageProps​","type":1,"pageTitle":"Image","url":"/OnyxUI/api/Image#ImageProps","content":"&lt;/&gt; interface ImageProps { ...: BaseProps Image: Fusion.UsedAs&lt;string&gt;? FallbackImage: Fusion.UsedAs&lt;string&gt;? ImageColor3: Fusion.UsedAs&lt;Color3 &gt;? ImageTransparency: Fusion.UsedAs&lt;number&gt;? ImageRectSize: Fusion.UsedAs&lt;Vector2 &gt;? ResampleMode: Fusion.UsedAs&lt;Enum.ResamplerMode&gt;? ScaleType: Fusion.UsedAs&lt;Enum.ScaleType&gt;? SliceCenter: Fusion.UsedAs&lt;Rect &gt;? SliceScale: Fusion.UsedAs&lt;number&gt;? TileSize: Fusion.UsedAs&lt;UDim2 &gt;? }  "},{"title":"MenuFrame","type":0,"sectionRef":"#","url":"/OnyxUI/api/MenuFrame","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"MenuFrame","url":"/OnyxUI/api/MenuFrame#types","content":" "},{"title":"MenuFrameProps​","type":1,"pageTitle":"MenuFrame","url":"/OnyxUI/api/MenuFrame#MenuFrameProps","content":"&lt;/&gt; interface MenuFrameProps { ...: GroupProps }  "},{"title":"SwapInput","type":0,"sectionRef":"#","url":"/OnyxUI/api/SwapInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"SwapInput","url":"/OnyxUI/api/SwapInput#types","content":" "},{"title":"SwapInputProps​","type":1,"pageTitle":"SwapInput","url":"/OnyxUI/api/SwapInput#SwapInputProps","content":"&lt;/&gt; interface SwapInputProps { ...: BaseProps }  "},{"title":"NumberSpinner","type":0,"sectionRef":"#","url":"/OnyxUI/api/NumberSpinner","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"NumberSpinner","url":"/OnyxUI/api/NumberSpinner#types","content":" "},{"title":"NumberSpinnerProps​","type":1,"pageTitle":"NumberSpinner","url":"/OnyxUI/api/NumberSpinner#NumberSpinnerProps","content":"&lt;/&gt; interface NumberSpinnerProps { ...: TextProps Value: Fusion.UsedAs&lt;number&gt;? Prefix: Fusion.UsedAs&lt;string&gt;? Suffix: Fusion.UsedAs&lt;string&gt;? Decimals: Fusion.UsedAs&lt;boolean&gt;? Duration: Fusion.UsedAs&lt;number&gt;? Commas: Fusion.UsedAs&lt;boolean&gt;? }  "},{"title":"ProgressBar","type":0,"sectionRef":"#","url":"/OnyxUI/api/ProgressBar","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ProgressBar","url":"/OnyxUI/api/ProgressBar#types","content":" "},{"title":"ProgressBarProps​","type":1,"pageTitle":"ProgressBar","url":"/OnyxUI/api/ProgressBar#ProgressBarProps","content":"&lt;/&gt; interface ProgressBarProps { ...: GroupProps Progress: Fusion.UsedAs&lt;number&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? Direction: Fusion.UsedAs&lt;Enum.FillDirection&gt;? Inverted: Fusion.UsedAs&lt;boolean&gt;? Length: Fusion.UsedAs&lt;UDim &gt;? }  "},{"title":"Scroller","type":0,"sectionRef":"#","url":"/OnyxUI/api/Scroller","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Scroller","url":"/OnyxUI/api/Scroller#types","content":" "},{"title":"ScrollerProps​","type":1,"pageTitle":"Scroller","url":"/OnyxUI/api/Scroller#ScrollerProps","content":"&lt;/&gt; interface ScrollerProps { ...: BaseProps AutomaticCanvasSize: Fusion.UsedAs&lt;Enum.AutomaticSize&gt;? BottomImage: Fusion.UsedAs&lt;string&gt;? CanvasPosition: Fusion.UsedAs&lt;Vector2 &gt;? CanvasSize: Fusion.UsedAs&lt;UDim2 &gt;? ElasticBehavior: Fusion.UsedAs&lt;Enum.ElasticBehavior&gt;? HorizontalScrollBarInset: Fusion.UsedAs&lt;Enum.ScrollBarInset&gt;? MidImage: Fusion.UsedAs&lt;string&gt;? ScrollBarImageColor3: Fusion.UsedAs&lt;Color3 &gt;? ScrollBarImageTransparency: Fusion.UsedAs&lt;number&gt;? ScrollBarThickness: Fusion.UsedAs&lt;number&gt;? ScrollingDirection: Fusion.UsedAs&lt;Enum.ScrollingDirection&gt;? ScrollingEnabled: Fusion.UsedAs&lt;boolean&gt;? TopImage: Fusion.UsedAs&lt;string&gt;? VerticalScrollBarInset: Fusion.UsedAs&lt;Enum.ScrollBarInset&gt;? VerticalScrollBarPosition: Fusion.UsedAs&lt;Enum.VerticalScrollBarPosition&gt;? }  "},{"title":"TextArea","type":0,"sectionRef":"#","url":"/OnyxUI/api/TextArea","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TextArea","url":"/OnyxUI/api/TextArea#types","content":" "},{"title":"TextAreaProps​","type":1,"pageTitle":"TextArea","url":"/OnyxUI/api/TextArea#TextAreaProps","content":"&lt;/&gt; interface TextAreaProps { ...: TextInputProps }  "},{"title":"SwitchInput","type":0,"sectionRef":"#","url":"/OnyxUI/api/SwitchInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"SwitchInput","url":"/OnyxUI/api/SwitchInput#types","content":" "},{"title":"SwitchInputProps​","type":1,"pageTitle":"SwitchInput","url":"/OnyxUI/api/SwitchInput#SwitchInputProps","content":"&lt;/&gt; interface SwitchInputProps { ...: BaseButtonProps Switched: Fusion.UsedAs&lt;boolean&gt;? Disabled: Fusion.UsedAs&lt;boolean&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? }  "},{"title":"SwitchGroup","type":0,"sectionRef":"#","url":"/OnyxUI/api/SwitchGroup","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"SwitchGroup","url":"/OnyxUI/api/SwitchGroup#types","content":" "},{"title":"SwitchGroupProps​","type":1,"pageTitle":"SwitchGroup","url":"/OnyxUI/api/SwitchGroup#SwitchGroupProps","content":"&lt;/&gt; interface SwitchGroupProps { ...: SwitchInputProps }  "},{"title":"Text","type":0,"sectionRef":"#","url":"/OnyxUI/api/Text","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Text","url":"/OnyxUI/api/Text#types","content":" "},{"title":"TextProps​","type":1,"pageTitle":"Text","url":"/OnyxUI/api/Text#TextProps","content":"&lt;/&gt; interface TextProps { ...: BaseProps Text: Fusion.UsedAs&lt;string&gt;? TextColor3: Fusion.UsedAs&lt;Color3 &gt;? TextSize: Fusion.UsedAs&lt;number&gt;? RichText: Fusion.UsedAs&lt;boolean&gt;? FontFace: Fusion.UsedAs&lt;Font &gt;? TextWrapped: Fusion.UsedAs&lt;boolean&gt;? TextXAlignment: Fusion.UsedAs&lt;Enum.TextXAlignment&gt;? TextYAlignment: Fusion.UsedAs&lt;Enum.TextYAlignment&gt;? Font: Fusion.UsedAs&lt;Enum.Font&gt;? TextScaled: Fusion.UsedAs&lt;boolean&gt;? TextTruncate: Fusion.UsedAs&lt;boolean&gt;? LineHeight: Fusion.UsedAs&lt;number&gt;? LocalizedText: Fusion.UsedAs&lt;string&gt;? MaxVisibleGraphemes: Fusion.UsedAs&lt;number&gt;? TextTransparency: Fusion.UsedAs&lt;number&gt;? }  "},{"title":"TitleBar","type":0,"sectionRef":"#","url":"/OnyxUI/api/TitleBar","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TitleBar","url":"/OnyxUI/api/TitleBar#types","content":" "},{"title":"TitleBarProps​","type":1,"pageTitle":"TitleBar","url":"/OnyxUI/api/TitleBar#TitleBarProps","content":"&lt;/&gt; interface TitleBarProps { ...: FrameProps Content: Fusion.UsedAs&lt;{string}&gt;? ContentSize: Fusion.UsedAs&lt;number&gt;? ContentColor: Fusion.UsedAs&lt;Color3 &gt;? ContentFontFace: Fusion.UsedAs&lt;Font &gt;? CloseButtonIcon: Fusion.UsedAs&lt;string&gt;? CloseButtonDisabled: Fusion.UsedAs&lt;boolean&gt;? OnClose: Fusion.UsedAs&lt;() → ()&gt;? }  "},{"title":"TextInput","type":0,"sectionRef":"#","url":"/OnyxUI/api/TextInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TextInput","url":"/OnyxUI/api/TextInput#types","content":" "},{"title":"TextInputProps​","type":1,"pageTitle":"TextInput","url":"/OnyxUI/api/TextInput#TextInputProps","content":"&lt;/&gt; interface TextInputProps { ...: BaseProps Disabled: Fusion.UsedAs&lt;boolean&gt;? CharacterLimit: Fusion.UsedAs&lt;number&gt;? Color: Fusion.UsedAs&lt;Color3 &gt;? PlaceholderText: Fusion.UsedAs&lt;string&gt;? Text: Fusion.UsedAs&lt;string&gt;? ClearTextOnFocus: Fusion.UsedAs&lt;boolean&gt;? TextWrapped: Fusion.UsedAs&lt;boolean&gt;? TextEditable: Fusion.UsedAs&lt;boolean&gt;? MultiLine: Fusion.UsedAs&lt;boolean&gt;? TextSize: Fusion.UsedAs&lt;number&gt;? TextColor3: Fusion.UsedAs&lt;Color3 &gt;? FontFace: Fusion.UsedAs&lt;Font &gt;? PlaceholderColor3: Fusion.UsedAs&lt;Color3 &gt;? TextXAlignment: Fusion.UsedAs&lt;Enum.TextXAlignment&gt;? TextYAlignment: Fusion.UsedAs&lt;Enum.TextYAlignment&gt;? TextTransparency: Fusion.UsedAs&lt;number&gt;? TextProcessor: Fusion.UsedAs&lt;(string) → string&gt;? IsFocused: Fusion.UsedAs&lt;boolean&gt;? OnFocused: Fusion.UsedAs&lt;() → ()&gt;? OnFocusLost: Fusion.UsedAs&lt;() → ()&gt;? }  "},{"title":"Themer","type":0,"sectionRef":"#","url":"/OnyxUI/api/Themer","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#types","content":" "},{"title":"ThemeSpec​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#ThemeSpec","content":"&lt;/&gt; type ThemeSpec = table A specification table for theme properties. Check out ThemeSpec.luau for a full reference of available theme properties.  "},{"title":"Theme​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#Theme","content":"&lt;/&gt; type Theme = table An active theme to be referenced in UI. "},{"title":"Properties​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#properties","content":" "},{"title":"Theme​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#Theme","content":"&lt;/&gt; Themer.Theme: Fusion.Contextual&lt;Theme&gt; The currently active theme. Use Themer.Theme:now() to get the active theme, and Themer.Theme:is(MyTheme):during() to make code use another theme. See Fusion Contextuals for more information. "},{"title":"Functions​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#functions","content":" "},{"title":"NewTheme​","type":1,"pageTitle":"Themer","url":"/OnyxUI/api/Themer#NewTheme","content":"&lt;/&gt; Themer.NewTheme( Scope: Fusion.Scope&lt;any&gt;, ThemeSpec: ThemeSpec ) → Theme Creates the specified theme. "},{"title":"Components","type":0,"sectionRef":"#","url":"/OnyxUI/docs/components","content":"Components You can see the full list of components here. What's a component? If you're unfamiliar with the concept of components, they're basically widgets you can reuse throughout your UI. This is much more efficient than, for example, rescripting a button each time you need one. Extending types Props are documented with the component's name included. When accessing a component's props in code, for example, use Button.Props, not Button.ButtonProps.","keywords":""},{"title":"Production Usage","type":0,"sectionRef":"#","url":"/OnyxUI/docs/in-production","content":"Production Usage These projects use OnyxUI to power their user experience: Loneka​ Scribel​ Climb of Chaos​ List your project If you'd like your game or resource featured here, open an issue or pull request! If it's pretty, I want it listed!","keywords":""},{"title":"Util","type":0,"sectionRef":"#","url":"/OnyxUI/api/Util","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#properties","content":" "},{"title":"Colors​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#Colors","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Util.Colors: table Colors imported from TailwindCSS's color palette. "},{"title":"Functions​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#functions","content":" "},{"title":"Fallback​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#Fallback","content":"&lt;/&gt; Util.Fallback( Value: Fusion.UsedAs&lt;any&gt;, Fallback: any ) → any Defaults the given Value to Fallback if nil.  "},{"title":"CombineProps​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#CombineProps","content":"&lt;/&gt; Util.CombineProps( Source: Fusion.PropertyTable, Target: Fusion.PropertyTable, ExcludedKeys: {any}? ) → Fusion.PropertyTable Combines two sets of props for easy passthrough, adding Source's props to Target. If a prop is already in Target, it will be overridden.  "},{"title":"EnsureValue​","type":1,"pageTitle":"Util","url":"/OnyxUI/api/Util#EnsureValue","content":"&lt;/&gt; Util.EnsureValue( Scope: Fusion.Scope&lt;any&gt;, Value: Fusion.UsedAs&lt;any&gt; ) → Fusion.Value&lt;Fusion.Scope&lt;any&gt;,any&gt; Converts the Value argument to a Fusion.Value object, if it is not one already. "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/OnyxUI/docs/intro","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"/OnyxUI/docs/intro#installation","content":""},{"title":"Wally package​","type":1,"pageTitle":"Getting Started","url":"/OnyxUI/docs/intro#wally-package","content":"Copy the Wally detailsPaste it into your wally.toml dependenciesRun wally install "},{"title":"Roblox model​","type":1,"pageTitle":"Getting Started","url":"/OnyxUI/docs/intro#roblox-model","content":"Download the OnyxUI.rbxm file listed hereInsert OnyxUI.rbxm into Roblox Studio "},{"title":"Usage Example​","type":1,"pageTitle":"Getting Started","url":"/OnyxUI/docs/intro#usage-example","content":"Here's a basic component example, making use of some of OnyxUI's features. local OnyxUI = require(path.to.OnyxUI) local Fusion = require(path.to.Fusion) local Themer = OnyxUI.Themer local InnerScope = Fusion.innerScope local Util = OnyxUI.Util return function(Scope: Fusion.Scope&lt;any&gt;, Props) local Scope = InnerScope(Scope, Fusion, OnyxUI.Util, OnyxUI.Components) local Theme = Themer.Theme:now() return Scope:Card { BackgroundColor3 = Util.Colors.Gray[&quot;200&quot;], Padding = Scope:Computed(function(Use) return UDim.new(0, Use(Theme.Spacing[&quot;2&quot;])) end), } end  "},{"title":"See it in action ✨​","type":1,"pageTitle":"Getting Started","url":"/OnyxUI/docs/intro#see-it-in-action-","content":""},{"title":"Styling Props","type":0,"sectionRef":"#","url":"/OnyxUI/docs/styling-props","content":"","keywords":""},{"title":"Property-based styling​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#property-based-styling","content":"Traditional GuiObject properties like BackgroundColor3 are supported identically to how Roblox does it. Use these as you would normally. There are exceptions however, like how Color is preferred over BackgroundColor3 in Button. "},{"title":"Children-based styling​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#children-based-styling","content":"UIPaddings, UIStrokes, UIListLayouts... Children-based styling is just too much boilerplate. In OnyxUI, all components support an extensive set of props to avoid working with these objects. See references below: "},{"title":"Basics​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#basics","content":"Roblox 🤓\tOnyxUI 😎UICorner\tCornerRadius UIPadding\tPadding, PaddingTop, PaddingLeft, PaddingRight, PaddingBottom UIStroke\tStrokeEnabled, StrokeThickness, StrokeColor, StrokeTransparency, StrokeLineJoinMode, StrokeApplyStrokeMode UIGradient\tGradientEnabled, GradientColor, GradientOffset, GradientRotation, GradientTransparency "},{"title":"Layouts​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#layouts","content":"Roblox 🤓\tOnyxUI 😎UIFlexItem\tFlexMode, FlexItemLineAlignment, FlexGrowRatio, FlexShrinkRatio UIListLayout\tListEnabled, ListPadding, ListFillDirection, ListSortOrder, ListWraps, ListHorizontalAlignment, ListHorizontalFlex, ListVerticalAlignment, ListVerticalFlex, ListItemLineAlignment UIGridLayout\tGridEnabled, GridFillDirection, GridFillDirectionMaxCells, GridCellPadding, GridCellSize, GridSortOrder, GridStartCorner, GridHorizontalAlignment, GridVerticalAlignment For other layouts like UITableLayout and UIPageLayout, see the Base component's source code. "},{"title":"Constraints​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#constraints","content":"Roblox 🤓\tOnyxUI 😎UIAspectRatioConstraint\tAspectRatio, AspectType, DominantAxis UISizeConstraint\tMaxSize, MinSize UITextSizeConstraint\tMaxTextSize, MinTextSize "},{"title":"Use in custom components​","type":1,"pageTitle":"Styling Props","url":"/OnyxUI/docs/styling-props#use-in-custom-components","content":"To support styling props in your own components, make use of the CombineProps utility to pass props through automatically. Your component must be based upon an OnyxUI component such as Base for this to work. "},{"title":"Theming","type":0,"sectionRef":"#","url":"/OnyxUI/docs/theming","content":"","keywords":""},{"title":"Sample themes​","type":1,"pageTitle":"Theming","url":"/OnyxUI/docs/theming#sample-themes","content":"OnyxNight - The default themeBitCave "},{"title":"Making your own theme​","type":1,"pageTitle":"Theming","url":"/OnyxUI/docs/theming#making-your-own-theme","content":"tip Check out ThemeSpec.luau for a full reference of available theme properties. Copy the following code into a new &quot;MyTheme&quot; module local Themer = OnyxUI.Themer local Scoped = Fusion.scoped local Scope = Scoped() local MyTheme = Themer.NewTheme(Scope, { -- Specify theme properties here }) return MyTheme Specify the properties you want Use it when constructing your UI local MyTheme = require(path.to.MyTheme) local Themer = OnyxUI.Themer Themer.Theme:is(MyTheme):during(function() local Theme = Themer.Theme:now() -- This now returns MyTheme! -- Any UI constructed from this callback will also use MyTheme. end)  "},{"title":"Utilities","type":0,"sectionRef":"#","url":"/OnyxUI/docs/utilities","content":"","keywords":""},{"title":"EnsureValue​","type":1,"pageTitle":"Utilities","url":"/OnyxUI/docs/utilities#ensurevalue","content":"Want to ensure your component props are Fusion Values? This makes it a one-line operation. local Util = OnyxUI.Util local InnerScope = Fusion.innerScope return function(Props) local Scope = InnerScope(Scope, Util) local MyProp = Scope:Fallback(Props.MyProp, &quot;Default&quot;) end  "},{"title":"CombineProps​","type":1,"pageTitle":"Utilities","url":"/OnyxUI/docs/utilities#combineprops","content":"Let's say you have a &quot;CustomButton&quot; component, and you want it to support Size, Position, and other arbitrary properties. Manually implementing all that boilerplate in the component itself is tedious. So let's have CombineProps do the passthrough for us: local Util = OnyxUI.Util local Themer = OnyxUI.Themer local Components = OnyxUI.Components local InnerScope = Fusion.innerScope return function(Props) local Scope = InnerScope(Scope, Fusion, Util, Components) local Theme = Themer.Theme:now() return Scope:BaseButton(Util.CombineProps(Props, { BackgroundTransparency = 0, CornerRadius = Computed(function(Use) return UDim.new(0, Use(Theme.CornerRadius[&quot;1&quot;])) end), -- All properties from OnyxUI's `BaseButton` component will now work. })) end  "},{"title":"Colors​","type":1,"pageTitle":"Utilities","url":"/OnyxUI/docs/utilities#colors","content":"Color shorthands imported from TailwindCSS's color palette. So you don't have to worry about color picking anymore. local Util = OnyxUI.Util return function(Props) return Scope:Button { Color = Util.Colors.Red[&quot;500&quot;], -- Shade &quot;500&quot; of Colors.Red } end  "}]