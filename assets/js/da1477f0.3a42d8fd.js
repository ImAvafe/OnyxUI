"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1428],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},58460:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={sidebar_position:5},a="Utilities",l={unversionedId:"utilities",id:"utilities",title:"Utilities",description:"Important utilities for UI development.",source:"@site/docs/utilities.md",sourceDirName:".",slug:"/utilities",permalink:"/OnyxUI/docs/utilities",draft:!1,editUrl:"https://github.com/ImAvafe/OnyxUI/edit/master/docs/utilities.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Styling Props",permalink:"/OnyxUI/docs/styling-props"},next:{title:"Production Usage",permalink:"/OnyxUI/docs/in-production"}},s={},p=[{value:"EnsureValue",id:"ensurevalue",level:2},{value:"CombineProps",id:"combineprops",level:2},{value:"Colors",id:"colors",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"utilities"},"Utilities"),(0,o.kt)("p",null,"Important utilities for UI development."),(0,o.kt)("h2",{id:"ensurevalue"},(0,o.kt)("a",{parentName:"h2",href:"/api/Util#EnsureValue"},"EnsureValue")),(0,o.kt)("p",null,"Want to ensure your component props are Fusion ",(0,o.kt)("inlineCode",{parentName:"p"},"Value"),"s? This makes it a one-line operation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = require(OnyxUI.Util)\n\nreturn function(Props)\n  local MyProp = Util.EnsureValue(Props.MyProp, "string", "Default")\nend\n')),(0,o.kt)("h2",{id:"combineprops"},(0,o.kt)("a",{parentName:"h2",href:"/api/Util#CombineProps"},"CombineProps")),(0,o.kt)("p",null,'Let\'s say you have a "CustomButton" component, and you want it to support ',(0,o.kt)("inlineCode",{parentName:"p"},"Size"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Position"),", and other arbitrary properties. Manually implementing all that boilerplate in the component itself is tedious. So let's have ",(0,o.kt)("inlineCode",{parentName:"p"},"CombineProps")," do the passthrough for us:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = require(OnyxUI.Util)\n\nreturn function(Props)\n  return BaseButton(Util.CombineProps(Props, {\n    BackgroundTransparency = 0,\n    CornerRadius = Computed(function()\n      return UDim.new(0, Themer.Theme.CornerRadius["1"]:get())\n    end),\n\n    -- All properties from OnyxUI\'s `BaseButton` component will now work.\n  }))\nend\n')),(0,o.kt)("h2",{id:"colors"},(0,o.kt)("a",{parentName:"h2",href:"/api/Util#Colors"},"Colors")),(0,o.kt)("p",null,"Color shorthands imported from ",(0,o.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/customizing-colors#default-color-palette"},"TailwindCSS's color palette"),". So you don't have to worry about color picking anymore."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = require(OnyxUI.Util)\n\nreturn function(Props)\n  return Button {\n    Color = Util.Colors.Red["500"], -- Shade "500" of Colors.Red\n  }\nend\n')))}d.isMDXComponent=!0}}]);